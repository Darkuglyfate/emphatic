% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/str_grep.R
\name{hl_grep}
\alias{hl_grep}
\alias{hl_grep_character}
\alias{hl_grep_print}
\alias{hl_grep_deparse}
\alias{hl_grep_str}
\title{Colour highlighting a regular expression search}
\usage{
hl_grep(x, pattern, fg = "black", bg = "yellow", ..., perl = TRUE)

hl_grep_character(x, pattern, fg = "black", bg = "yellow", ...)

hl_grep_print(x, pattern, fg = "black", bg = "yellow", ...)

hl_grep_deparse(x, pattern, fg = "black", bg = "yellow", ...)

hl_grep_str(x, pattern, fg = "black", bg = "yellow", ...)
}
\arguments{
\item{x}{character string}

\item{pattern}{regular expression string. Note: don't get too fancy here}

\item{fg, bg}{any valid R colour specification e.g. 'hotpink', '#335588'}

\item{...}{extra args passed to \code{gsub}}

\item{perl}{logical. use perl style regex. default: TRUE}
}
\description{
Highlight text within an R object which matches a given regex. This
only works in a terminal which supports ANSI colour codes.

There are slightly different versions of the highlighting function depending
upon which text version of the object you'd like to match against:

\describe{
  \item{hl_grep}{ - the given object \code{x} must already be a character string}
  \item{hl_grep_character}{ - performs the matching after first calling
          \code{as.character(x)}}
  \item{hl_grep_print}{ - performs the matching against the default
           \code{print(x)} output}
  \item{hl_grep_deparse}{ - performs the matching after first calling
          \code{deparse1(x)}}
  \item{hl_grep_str}{ - performs the matching on the output of calling
          \code{str(x)}}
}
}
